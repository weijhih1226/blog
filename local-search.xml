<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MySQL指令</title>
    <link href="/blog/2023/04/20/MySQL%E6%8C%87%E4%BB%A4/"/>
    <url>/blog/2023/04/20/MySQL%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="MySQL常用指令"><a href="#MySQL常用指令" class="headerlink" title="MySQL常用指令"></a>MySQL常用指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql -u &lt;username&gt; -p        <span class="hljs-comment"># 登入</span><br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SHOW</span> DATABASES;               <span class="hljs-comment">-- 顯示資料庫(預設橫式顯示)</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SHOW</span> DATABASES \g             <span class="hljs-comment">-- 橫式顯示</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SHOW</span> DATABASES \G             <span class="hljs-comment">-- 直式顯示</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">CREATE</span> DATABASE <span class="hljs-operator">&lt;</span>name<span class="hljs-operator">&gt;</span>;       <span class="hljs-comment">-- 建立資料庫</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">DROP</span> DATABASE <span class="hljs-operator">&lt;</span>name<span class="hljs-operator">&gt;</span>;         <span class="hljs-comment">-- 刪除資料庫</span><br><span class="hljs-operator">&gt;</span> USE <span class="hljs-operator">&lt;</span>database<span class="hljs-operator">&gt;</span>;               <span class="hljs-comment">-- 使用資料庫</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> DATABASE();            <span class="hljs-comment">-- 查看目前所在資料庫</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SHOW</span> TABLES;                  <span class="hljs-comment">-- 顯示資料表</span><br><span class="hljs-operator">&gt;</span> DELIMITER <span class="hljs-operator">&lt;</span>結束符號<span class="hljs-operator">&gt;</span>          <span class="hljs-comment">-- 更改結束符號</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SHOW</span> WARNINGS;                <span class="hljs-comment">-- 顯示錯誤訊息</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-operator">&lt;</span>name<span class="hljs-operator">&gt;</span>           <span class="hljs-comment">-- 建立資料表</span><br>(<br>    <span class="hljs-operator">&lt;</span>column1<span class="hljs-operator">&gt;</span> <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">20</span>),<br>    <span class="hljs-operator">&lt;</span>column2<span class="hljs-operator">&gt;</span> <span class="hljs-type">INT</span><br>);<br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SHOW</span> COLUMNS <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span>;    <span class="hljs-comment">-- 顯示資料表各欄位性質</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">DESC</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span>;                 <span class="hljs-comment">-- 顯示資料表各欄位性質</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-operator">&lt;</span>name<span class="hljs-operator">&gt;</span>;            <span class="hljs-comment">-- 刪除資料表</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span>;        <span class="hljs-comment">-- 顯示資料表中所有欄位資料</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span>; <span class="hljs-comment">-- 顯示資料表中欄位資料</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span>(<span class="hljs-operator">&lt;</span>column1<span class="hljs-operator">&gt;</span>, <span class="hljs-operator">&lt;</span>column2<span class="hljs-operator">&gt;</span>) <span class="hljs-comment">-- 新增資料列</span><br><span class="hljs-keyword">VALUES</span>(<span class="hljs-operator">&lt;</span>column1 data<span class="hljs-operator">&gt;</span>, <span class="hljs-operator">&lt;</span>column2 data<span class="hljs-operator">&gt;</span>),<br>      (<span class="hljs-operator">&lt;</span>column1 data<span class="hljs-operator">&gt;</span>, <span class="hljs-operator">&lt;</span>column2 data<span class="hljs-operator">&gt;</span>);<br><br></code></pre></td></tr></table></figure><h2 id="資料庫階層架構"><a href="#資料庫階層架構" class="headerlink" title="資料庫階層架構"></a>資料庫階層架構</h2><ul><li>資料庫(database)<ul><li>資料表(table)<ul><li>欄位(column)</li></ul></li></ul></li></ul><h2 id="資料類型"><a href="#資料類型" class="headerlink" title="資料類型"></a>資料類型</h2><h3 id="數值類型"><a href="#數值類型" class="headerlink" title="數值類型"></a>數值類型</h3><ul><li><p>整數 (Integer)</p><p>形式：<code>&lt;data type&gt; [UNSIGNED] [ZEROFILL]</code></p><table><thead><tr><th align="center">類型</th><th align="center">Byte(s)</th><th align="left">範圍</th><th align="left">UNSIGNED</th></tr></thead><tbody><tr><td align="center">TINYINT</td><td align="center">1</td><td align="left">-128 ~ 127</td><td align="left">0 ~ 255</td></tr><tr><td align="center">SMALLINT</td><td align="center">2</td><td align="left">-32768 ~ 32767</td><td align="left">0 ~ 65535</td></tr><tr><td align="center">MEDIUMINT</td><td align="center">3</td><td align="left">-8388608 ~ 8388607</td><td align="left">0 ~ 16777215</td></tr><tr><td align="center">INTEGER (INT)</td><td align="center">4</td><td align="left">-2147483648 ~ 2147483647</td><td align="left">0 ~ 4294967295</td></tr><tr><td align="center">BIGINT</td><td align="center">8</td><td align="left">-9223372036854775808 ~ 9223372036854775807</td><td align="left">0 ~ 18446744073709551615</td></tr></tbody></table></li><li><p>定點數 (Fixed-Point)</p><ul><li>DECIMAL(M, D)(&#x3D;DEC,NUMERIC,FIXED)<ul><li>M：總共位數(最大65、預設30)；D：小數點後位數(最大30、預設0)</li><li>小數點後不足補0，多的四捨五入</li><li>可負數，不算位數</li></ul></li></ul></li><li><p>浮點數 (Floating-Point)</p><ul><li>FLOAT(M, D)<ul><li>範圍：-3.402823466E+38 ~ -1.175494351E-38, 0, 1.175494351E-38 ~ 3.402823466E+38</li></ul></li></ul></li><li><p>雙精度浮點數</p><ul><li>DOUBLE(M, D)(&#x3D;DOUBLE PRECISION&#x3D;REAL)<ul><li>範圍：-1.7976931348623157E+308 ~ -2.2250738585072014E-308, 0, 2.2250738585072014E-308 ~ 1.7976931348623157E+308</li></ul></li></ul></li><li><p>位 (Bit-Value)</p><ul><li>BIT(M)</li><li>M：總共位數(最小1、最大64、預設1)</li><li>儲存方式：b’1’</li><li>顯示方式：<ul><li><code>&lt;column_name&gt;</code>+0 : 十進位</li><li>bin(<code>&lt;column_name&gt;</code>+0) : 二進位</li><li>oct(<code>&lt;column_name&gt;</code>+0) : 八進位</li><li>hex(<code>&lt;column_name&gt;</code>+0) : 十六進位</li></ul></li></ul></li></ul><h3 id="時間類型"><a href="#時間類型" class="headerlink" title="時間類型"></a>時間類型</h3><ul><li><p>DATE</p><ul><li>日期：YYYY-MM-DD</li><li>範圍：1000-01-01 ~ 9999-12-31</li><li>可插入INT型，不需”-“</li></ul></li><li><p>TIME</p><ul><li>時間：HH:MM:SS 或 HH:MM 或 MMSS 或 SS</li><li>範圍：-838:59:59 ~ 838:59:59</li><li>可表示時間差</li><li>可插入INT型，不需”:”</li></ul></li><li><p>DATETIME</p><ul><li>日期時間：YYYY-MM-DD HH:MM:SS</li><li>範圍：1000-01-01 00:00:00 ~ 9999-12-31 23:59:59</li></ul></li><li><p>YEAR</p><ul><li>年：YYYY 或 YY</li><li>範圍：1901 ~ 2155</li><li>可插入INT型或STRING型(2位或4位)<ul><li>1 ~ 69 或 “0” ~ “69” 表示 2001 ~ 2069</li><li>70 ~ 99 或 “70” ~ “99” 表示 1970 ~ 1999</li><li>0 表示 0000</li></ul></li></ul></li><li><p>TIMESTAMP</p><ul><li>範圍 : 1970-01-01 00:00:01 UTC ~ 2038-01-19 03:14:07 UTC</li><li>會隨著 timezone 改變</li><li>預設當前時間</li><li>SELECT NOW()：查看系統當前時間</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-type">TIMESTAMP</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-type">TIMESTAMP</span> <span class="hljs-keyword">DEFAULT</span> NOW() <span class="hljs-keyword">ON</span> <span class="hljs-keyword">UPDATE</span> NOW()    <span class="hljs-comment">-- 同上</span><br></code></pre></td></tr></table></figure></li><li><p>設定時區</p><ul><li>show variables LIKE “%time_zone%”：查看時區變量</li><li>SET time_zone &#x3D; “+08:00”：更改時區為 UTC+8 小時</li><li>SET time_zone &#x3D; “system”：更改時區為系統當前時區</li><li>time_zone 也可用國家名稱設置</li></ul></li></ul><h2 id="過濾條件"><a href="#過濾條件" class="headerlink" title="過濾條件"></a>過濾條件</h2><p>形式：<code>SELECT * FROM &lt;table&gt; WHERE &lt;conditions&gt;;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-operator">&lt;</span>column1<span class="hljs-operator">&gt;=</span>&quot;XXX&quot; <span class="hljs-operator">&lt;</span><span class="hljs-keyword">AND</span><span class="hljs-operator">|</span><span class="hljs-keyword">OR</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">NOT</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span>column2<span class="hljs-operator">&gt;=</span>&quot;YYY&quot;;<br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-operator">&lt;</span>column1<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">IN</span> (&quot;XXX&quot; , &quot;YYY&quot;);     <span class="hljs-comment">-- 等同於WHERE &lt;column1&gt;=&quot;XXX&quot; OR &lt;column2&gt;=&quot;YYY&quot;</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-operator">&lt;</span>column1<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">BETWEEN</span> &quot;VAL1&quot; <span class="hljs-keyword">AND</span> &quot;VAL2&quot;<br></code></pre></td></tr></table></figure><ul><li>模糊搜尋（例如：顯示包含i的資料，不區分大小寫）</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">LIKE</span> &quot;%i%&quot;;      <span class="hljs-comment">-- %代表任意字符</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">LIKE</span> &quot;_i_&quot;;      <span class="hljs-comment">-- _代表1個任意字符</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">LIKE</span> &quot;%\%i%&quot;;    <span class="hljs-comment">-- 顯示包含%i的資料</span><br></code></pre></td></tr></table></figure><h2 id="新增資料表"><a href="#新增資料表" class="headerlink" title="新增資料表"></a>新增資料表</h2><p>形式：<code>CREATE TABLE(&lt;column&gt; &lt;data type&gt;);</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> <span class="hljs-operator">&lt;</span>name<span class="hljs-operator">&gt;</span>             <span class="hljs-comment">-- 判斷資料表是否存在而建立</span><br>(<br>    <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span>data type<span class="hljs-operator">&gt;</span>                        <span class="hljs-comment">-- 資料預設為NULL</span><br>    <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span>data type<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>               <span class="hljs-comment">-- 資料不可為NULL</span><br>    <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">value</span><span class="hljs-operator">&gt;</span>                    <span class="hljs-comment">-- 資料預設值(預設為NULL)</span><br>    <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span>data type<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">PRIMARY</span> KEY            <span class="hljs-comment">-- 資料唯一性、不可重複、不可為NULL</span><br>    <span class="hljs-keyword">PRIMARY</span> KEY(<span class="hljs-operator">&lt;</span>column1<span class="hljs-operator">&gt;</span>, <span class="hljs-operator">&lt;</span>column2<span class="hljs-operator">&gt;</span>)           <span class="hljs-comment">-- 設置聯合PRIMARY KEY</span><br>    <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span>data type<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">UNIQUE</span>                 <span class="hljs-comment">-- 資料唯一性、不可重複、可為NULL</span><br>    <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span>data type<span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">PRIMARY</span> KEY<span class="hljs-operator">|</span><span class="hljs-keyword">UNIQUE</span><span class="hljs-operator">&gt;</span> AUTO_INCREMENT   <span class="hljs-comment">-- 未填值時自動遞增</span><br>);<br></code></pre></td></tr></table></figure><h2 id="取別名"><a href="#取別名" class="headerlink" title="取別名"></a>取別名</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">AS</span> <span class="hljs-operator">&lt;</span>alias<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span>;<br></code></pre></td></tr></table></figure><h2 id="更新及刪除資料"><a href="#更新及刪除資料" class="headerlink" title="更新及刪除資料"></a>更新及刪除資料</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">UPDATE</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SET</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">=</span> &quot;XXX&quot; <span class="hljs-keyword">WHERE</span> <span class="hljs-operator">&lt;</span>conditions<span class="hljs-operator">&gt;</span>;<br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-operator">&lt;</span>conditions<span class="hljs-operator">&gt;</span>;<br></code></pre></td></tr></table></figure><h2 id="字串處理函式"><a href="#字串處理函式" class="headerlink" title="字串處理函式"></a>字串處理函式</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> CONCAT(<span class="hljs-operator">&lt;</span>column1<span class="hljs-operator">&gt;</span>, <span class="hljs-operator">&lt;</span>column2<span class="hljs-operator">&gt;</span>) <span class="hljs-keyword">AS</span> <span class="hljs-operator">&lt;</span>別名<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span>;   <span class="hljs-comment">-- 串接字串(&lt;column1&gt;&lt;column2&gt;)</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> CONCAT_WS(&quot;&lt;間格符&gt;&quot;, <span class="hljs-operator">&lt;</span>column1<span class="hljs-operator">&gt;</span>, <span class="hljs-operator">&lt;</span>column2<span class="hljs-operator">&gt;</span>) <span class="hljs-keyword">AS</span> <span class="hljs-operator">&lt;</span>別名<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span>;    <span class="hljs-comment">-- 串接字串(&lt;column1&gt;&lt;間格符&gt;&lt;column2&gt;)</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">SUBSTRING</span>(&quot;Hello World&quot;, <span class="hljs-number">7</span>);               <span class="hljs-comment">-- 修剪字串(World)</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">SUBSTRING</span>(&quot;Hello World&quot;, <span class="hljs-number">-3</span>);              <span class="hljs-comment">-- 修剪字串(rld)</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">SUBSTRING</span>(&quot;Hello World&quot;, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>);            <span class="hljs-comment">-- 修剪字串(Hell)</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> REPLACE(&quot;Hello World&quot;, &quot;World&quot;, &quot;MySQL&quot;);  <span class="hljs-comment">-- 替換字串(Hello MySQL)</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> REVERSE(&quot;Hello World&quot;);                    <span class="hljs-comment">-- 反轉字串(dlroW olleH)</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> LENGTH(&quot;Hello World&quot;);                     <span class="hljs-comment">-- 字串長度(11)</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">CHAR_LENGTH</span>(&quot;Hello World&quot;);                <span class="hljs-comment">-- 字串長度(11)</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">CHARACTER_LENGTH</span>(&quot;Hello World&quot;);           <span class="hljs-comment">-- 字串長度(11)</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">LOWER</span>(&quot;Hello World&quot;);                      <span class="hljs-comment">-- 轉小寫(hello world)</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">UPPER</span>(&quot;Hello World&quot;);                      <span class="hljs-comment">-- 轉大寫(HELLO WORLD)</span><br></code></pre></td></tr></table></figure><h2 id="排序篩選"><a href="#排序篩選" class="headerlink" title="排序篩選"></a>排序篩選</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span>;          <span class="hljs-comment">-- 依照column升序排序</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">DESC</span>;     <span class="hljs-comment">-- 依照column降序排序</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">&lt;</span>column1<span class="hljs-operator">&gt;</span>, <span class="hljs-operator">&lt;</span>column2<span class="hljs-operator">&gt;</span>, <span class="hljs-operator">&lt;</span>column3<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-number">3</span>, <span class="hljs-number">1</span>;    <span class="hljs-comment">-- 依照column3、column1升序排序</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span> LIMIT <span class="hljs-number">3</span>;                    <span class="hljs-comment">-- 顯示前3筆資料</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span> LIMIT <span class="hljs-number">2</span>, <span class="hljs-number">4</span>;                 <span class="hljs-comment">-- 顯示第2筆後4筆資料</span><br></code></pre></td></tr></table></figure><h2 id="資料統計"><a href="#資料統計" class="headerlink" title="資料統計"></a>資料統計</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span>;                     <span class="hljs-comment">-- 計算資料數量</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span>;            <span class="hljs-comment">-- 去除重複資料顯示唯一值</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span>) <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span>;   <span class="hljs-comment">-- 將column分組後算出每組的資料數量</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">MIN</span>(<span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span>) <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span>;                <span class="hljs-comment">-- 計算column的最小值</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">MAX</span>(<span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span>) <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span>;                <span class="hljs-comment">-- 計算column的最大值</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">SUM</span>(<span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span>) <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span>;                <span class="hljs-comment">-- 計算column的和</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">AVG</span>(<span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span>) <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span>;                <span class="hljs-comment">-- 計算column的平均值</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span>) <span class="hljs-keyword">FROM</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">table</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">HAVING</span> <span class="hljs-operator">&lt;</span>column1<span class="hljs-operator">&gt;</span> <span class="hljs-operator">=</span> &quot;XXX&quot;;   <span class="hljs-comment">-- 過濾GROUP BY後資料</span><br></code></pre></td></tr></table></figure><h2 id="更新欄位"><a href="#更新欄位" class="headerlink" title="更新欄位"></a>更新欄位</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-operator">&lt;</span>name<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">ADD</span> column3 <span class="hljs-type">INT</span> <span class="hljs-keyword">PRIMARY</span> KEY AUTO_INCREMENT;    <span class="hljs-comment">-- 新增欄位</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-operator">&lt;</span>name<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">DROP</span> column3;                                  <span class="hljs-comment">-- 刪除欄位</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-operator">&lt;</span>name<span class="hljs-operator">&gt;</span> CHANGE <span class="hljs-operator">&lt;</span>column_old<span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span>column_new<span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span>data_type<span class="hljs-operator">&gt;</span>;  <span class="hljs-comment">-- 更改欄位名稱</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-operator">&lt;</span>name<span class="hljs-operator">&gt;</span> MODIFY <span class="hljs-operator">&lt;</span><span class="hljs-keyword">column</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span>data_type<span class="hljs-operator">&gt;</span>;                   <span class="hljs-comment">-- 更改欄位性質</span><br></code></pre></td></tr></table></figure><hr><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ol><li><a href="https://hackmd.io/@kenny88881234/HJ_KDx1xS">https://hackmd.io/@kenny88881234/HJ_KDx1xS</a></li><li><a href="https://dev.mysql.com/doc/refman/5.7/en/numeric-types.html">https://dev.mysql.com/doc/refman/5.7/en/numeric-types.html</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
      <category>SQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>SQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux常用相關指令</title>
    <link href="/blog/2023/04/20/Linux%E7%9B%B8%E9%97%9C%E6%8C%87%E4%BB%A4/"/>
    <url>/blog/2023/04/20/Linux%E7%9B%B8%E9%97%9C%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="Linux-指令功能全集"><a href="#Linux-指令功能全集" class="headerlink" title="Linux 指令功能全集"></a>Linux 指令功能全集</h2><h3 id="系統啟動、管理、監看"><a href="#系統啟動、管理、監看" class="headerlink" title="系統啟動、管理、監看"></a>系統啟動、管理、監看</h3><h4 id="Systemctl：管理systemd服務"><a href="#Systemctl：管理systemd服務" class="headerlink" title="Systemctl：管理systemd服務"></a>Systemctl：管理systemd服務</h4><p>管理Systemd的各種服務，可利用 <code>systemctl</code> 來操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl 操作指令 服務名稱[.service]<br>systemctl                           <span class="hljs-comment"># 查詢目前運行中服務</span><br>systemctl -n --lines=整數           <span class="hljs-comment"># 顯示列數</span><br>systemctl start &lt;服務名稱&gt;          <span class="hljs-comment"># 啟動服務</span><br>systemctl stop &lt;服務名稱&gt;           <span class="hljs-comment"># 停止服務</span><br>systemctl restart &lt;服務名稱&gt;        <span class="hljs-comment"># 重新啟動服務</span><br>systemctl status &lt;服務名稱&gt;         <span class="hljs-comment"># 顯示服務狀態</span><br>systemctl reload &lt;服務名稱&gt;         <span class="hljs-comment"># 重新載入服務配置(.conf)</span><br>systemctl daemon-reload &lt;服務名稱&gt;  <span class="hljs-comment"># 重新載入systemd服務配置(.service)</span><br>systemctl <span class="hljs-built_in">enable</span> &lt;服務名稱&gt;         <span class="hljs-comment"># 開機自動啟動服務</span><br>systemctl <span class="hljs-built_in">disable</span> &lt;服務名稱&gt;        <span class="hljs-comment"># 開機不自動啟動服務</span><br>systemctl is-active &lt;服務名稱&gt;      <span class="hljs-comment"># 目前是否執行服務</span><br>systemctl is-enabled &lt;服務名稱&gt;     <span class="hljs-comment"># 開機是否自動啟動服務</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl list-unit-files --<span class="hljs-built_in">type</span> service --all   <span class="hljs-comment"># 列出所有服務</span><br></code></pre></td></tr></table></figure><h4 id="Journalctl：查詢systemd日誌"><a href="#Journalctl：查詢systemd日誌" class="headerlink" title="Journalctl：查詢systemd日誌"></a>Journalctl：查詢systemd日誌</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl status systemd-journald.service   <span class="hljs-comment"># 顯示journal service狀態</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">journalctl -u &lt;服務名稱&gt;                      <span class="hljs-comment"># 只顯示指定systemd單元的訊息</span><br>journalctl _SYSTEMD_UNIT=&lt;服務名稱&gt;           <span class="hljs-comment"># 等同-u</span><br>journalctl -f                                 <span class="hljs-comment"># 顯示並更新最近的日誌訊息</span><br>journalctl -p &lt;0~7&gt;                           <span class="hljs-comment"># 要查看log的最高層級</span><br>journalctl --since &lt;YYYY-MM-DD[ HH:MM[:SS]]&gt;  <span class="hljs-comment"># 列出自某時間點之日誌訊息</span><br></code></pre></td></tr></table></figure><ul><li>log層級：<ul><li>0 - emerg</li><li>1 - alert</li><li>2 - crit</li><li>3 - err</li><li>4 - warning</li><li>5 - notice</li><li>6 - info</li><li>7 - debug</li></ul></li></ul><h4 id="Systemd設定"><a href="#Systemd設定" class="headerlink" title="Systemd設定"></a>Systemd設定</h4><ul><li><p>功能：</p><ul><li><code>.service</code> - 處理服務</li><li><code>.target</code> - 處理runlevel</li><li><code>.mount</code> - 處理檔案系統掛載</li><li><code>.timer</code> - 處理工作排程</li></ul></li><li><p>目錄：</p><ul><li>&#x2F;etc&#x2F;systemd&#x2F;system - 權限最高</li><li>&#x2F;run&#x2F;systemd&#x2F;system - 權限中等</li><li>&#x2F;lib&#x2F;systemd&#x2F;system或&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system - 權限最低</li></ul></li><li><p>範例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs conf">[Unit]<br>Description=A description for this service unit.  # 該systemd服務單元設定檔案的描述<br>After=network.target  # 指定systemd目標單元，確保本單元在systemd目標單元運行後運行。本範例指在網路功能啟用後啟用，以讓本服務單元可正常聯網。<br><br>[Timer]<br>OnStartupSec=5ms<br>OnUnitInactiveSec=10s<br>OnCalendar=*-*-* *:*:00                 # 每分鐘0秒執行<br>Unit=&lt;指定服務&gt;                         # 指定的服務<br><br>[Service]<br>User=user                               # 使用者名稱<br>Group=group                             # 使用者群組<br>WorkingDirectory=/path/to/folder        # 工作目錄<br>Environment=&quot;VARIABLE_1=VALUE_1&quot; &quot;VARIABLE_2=VALUE_2&quot; # 直接定義多重環境變數<br>EnvironmentFile=/path/to/environment    # 環境變數<br>ExecStart=/path/to/program [arguments]  # 本服務單元啟動時要執行的應用程式<br>Restart=always                          # 設定執行程式在怎樣情況關閉時，再執行相同指令<br>RestartSec=3s                           # 關閉後到重啟間隔時間，預設100ms<br><br>[Install]<br>WantedBy=multi-user.target              # 運行該systemd目標單元時，會同時運行本單元<br></code></pre></td></tr></table></figure><ul><li><code>Restart</code>可設定為：<ul><li><code>no</code>：不重啟。(預設值)</li><li><code>always</code>：不管什麼原因都會重啟。</li><li><code>on-success</code>：只在成功運行結束後(也就是行程回傳的Exit Status為0的時候)才進行重啟。(這蠻少用)</li><li><code>on-failure</code>：在運行失敗後(行程回傳的Exit Status非為0、被使用Kill信號強制關閉、逾時或是餵狗沒反應時)才進行重啟。</li><li><code>on-abnormal</code>：在意外地運行失敗後(被使用Kill信號強制關閉、逾時或是餵狗沒反應時)才進行重啟。</li><li><code>on-abort</code>：被使用Kill信號強制關閉時才進行重啟。</li><li><code>on-watchdog</code>：餵狗沒反應時才進行重啟。</li></ul></li></ul></li></ul><h3 id="修改自動登出時間"><a href="#修改自動登出時間" class="headerlink" title="修改自動登出時間"></a>修改自動登出時間</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$TMOUT</span>     <span class="hljs-comment"># 查詢自動登出時間</span><br></code></pre></td></tr></table></figure><p>修改<code>/etc/profile</code>或<code>/etc/bashrc</code>或<code>~/.bash_profile</code>或<code>~/.bashrc</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">TMOUT=600   <span class="hljs-comment"># 表示10分鐘之後自動登出</span><br>TMOUT=      <span class="hljs-comment"># 表示關閉自動登出</span><br></code></pre></td></tr></table></figure><p>重新啟動bash配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bash_profile<br></code></pre></td></tr></table></figure><h3 id="更換Shell"><a href="#更換Shell" class="headerlink" title="更換Shell"></a>更換Shell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install fish<br>curl -L https://get.oh-my.fish | fish<br>omf install bobthefish<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;%s\n&quot;</span> <span class="hljs-variable">$SHELL</span>    <span class="hljs-comment"># 印出當前shell</span><br><span class="hljs-built_in">cat</span> /etc/shells         <span class="hljs-comment"># 列出所有可用shell</span><br>yum install zsh<br>chsh -s $(<span class="hljs-built_in">which</span> zsh) $(<span class="hljs-built_in">whoami</span>)<br><br>git config --global core.autocrlf <span class="hljs-literal">false</span>  <span class="hljs-comment"># github儲存庫為Unix格式，若要離線安裝下載至Windows再上傳至Linux server，須取消自動轉換CRLF</span><br>git <span class="hljs-built_in">clone</span> https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh     <span class="hljs-comment"># 下載Oh-my-zsh獲得更多zsh樣式</span><br><br><span class="hljs-built_in">cp</span> ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc<br></code></pre></td></tr></table></figure><p>修改主題，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ZSH_THEME=&quot;robbyrussell&quot;</span><br>ZSH_THEME=<span class="hljs-string">&quot;agnoster&quot;</span><br></code></pre></td></tr></table></figure><h3 id="效能分析"><a href="#效能分析" class="headerlink" title="效能分析"></a>效能分析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">top           <span class="hljs-comment"># 查看CPU、執行緒狀態</span><br><span class="hljs-built_in">uptime</span>        <span class="hljs-comment"># 僅顯示目前時間、主機開機時間、登入使用者數、負載情況</span><br>w             <span class="hljs-comment"># 顯示目前登入使用者相關資訊</span><br></code></pre></td></tr></table></figure><ul><li>top按鍵功能<ul><li>1：顯示單一&#x2F;多cpu使用情形切換</li></ul></li><li>load average<ul><li>系統每1分鐘、5分鐘、15分鐘的負載情況</li><li>須除以邏輯CPU數量(<code>cat /proc/cpuinfo | grep &quot;processor&quot; | wc -l</code>)</li><li>數值1為飽和、0.7以上須注意</li></ul></li><li>Tasks<ul><li>total - 行程總數</li><li>running - 正在執行</li><li>sleeping - 休眠狀態</li><li>stopped - 已停止</li><li>zombie - 僵屍狀態</li></ul></li><li>CPU<ul><li>us - 用戶空間佔用CPU的百分比</li><li>sy - 內核空間佔用CPU的百分比</li><li>ni - 改變過優先順序的進程佔用CPU的百分比</li><li>wa - IO等待佔用CPU的百分比</li><li>hi - 硬中斷（Hardware IRQ）佔用CPU的百分比</li><li>si - 軟中斷（Software Interrupts）佔用CPU的百分比</li></ul></li><li>KiB Mem<ul><li>total - 實體記憶體容量</li><li>free - 剩餘記憶體容量</li><li>used - 已使用的記憶體容量</li><li>buff&#x2F;cache - 暫存記憶體容量</li></ul></li><li>KiB Swap<ul><li>total - swap總容量</li><li>free - 剩餘swap容量</li><li>used - 已使用的swap容量</li><li>avail Mem - 暫存記憶體容量</li></ul></li><li>Process<ul><li>PID - 行程id（Process ID）</li><li>USER - 使用者</li><li>PR - 優先順序</li><li>NI - nice值（值越小優先權越高）</li><li>VIRT - 該行程使用的虛擬記憶體總量（單位：KB(VIRT&#x3D;SWAP+RES)）</li><li>RES - 該行程使用的、未被使用的實體記憶體大小（單位：KB(RES&#x3D;CODE+DATA)）</li><li>SHR - 共用記憶體大小（單位：KB）</li><li>S - 行程狀態（D：不可中斷的睡眠狀態、R：運行、S：睡眠、T：跟蹤&#x2F;停止、Z：僵屍進程）</li><li>%CPU - 上次更新到現在的CPU時間佔用百分比</li><li>%MEM - 行程使用的實體記憶體百分比</li><li>TIME+ - 行程使用的CPU時間總計（單位：1&#x2F;100秒）</li><li>COMMAND - 行程名稱</li></ul></li></ul><h3 id="Linux系統根目錄介紹"><a href="#Linux系統根目錄介紹" class="headerlink" title="Linux系統根目錄介紹"></a>Linux系統根目錄介紹</h3><ul><li><p>&#x2F;bin</p><ul><li>binary程式所在目錄</li></ul></li><li><p>&#x2F;boot</p><ul><li>系統啟動核心文件</li></ul></li><li><p>&#x2F;dev</p><ul><li>系統設備文件</li></ul></li><li><p>&#x2F;etc</p><ul><li>系統及應用軟體的配置文件</li><li>&#x2F;etc&#x2F;passwd - 記錄用戶訊息</li></ul></li><li><p>&#x2F;home</p><ul><li>所有使用者的個人文件</li></ul></li><li><p>&#x2F;lib</p><ul><li>共享函式庫</li><li>類似Windows系統之動態函式庫(.dll)</li></ul></li><li><p>&#x2F;lib64</p><ul><li>64位元系統之共享函式庫</li></ul></li><li><p>&#x2F;lost+found</p><ul><li>保存遺失文件</li></ul></li><li><p>&#x2F;media</p><ul><li>可移動設備的掛載目錄</li></ul></li><li><p>&#x2F;mnt</p><ul><li>掛載設備目錄</li></ul></li><li><p>&#x2F;opt</p><ul><li>option - 目錄是給第三方的軟體放置的目錄，也就是給那些自行額外安裝的軟體放的目錄。</li></ul></li></ul><hr><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://magiclen.org/linux-init-application-service/">https://magiclen.org/linux-init-application-service/</a></li><li><a href="https://david50.pixnet.net/blog/post/45252072-%5B%E7%AD%86%E8%A8%98%5Dlinux---top%E8%B3%87%E8%A8%8A">https://david50.pixnet.net/blog/post/45252072-%5B%E7%AD%86%E8%A8%98%5Dlinux---top%E8%B3%87%E8%A8%8A</a></li><li><a href="https://blog.xuite.net/zerofirst/blog/147985077">https://blog.xuite.net/zerofirst/blog/147985077</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker常用相關指令</title>
    <link href="/blog/2023/03/31/Docker%E7%9B%B8%E9%97%9C%E6%8C%87%E4%BB%A4/"/>
    <url>/blog/2023/03/31/Docker%E7%9B%B8%E9%97%9C%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="Docker-指令功能全集"><a href="#Docker-指令功能全集" class="headerlink" title="Docker 指令功能全集"></a>Docker 指令功能全集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker inspect &lt;容器ID|名稱&gt;          <span class="hljs-comment"># 檢查某Container的狀態（進入點、執行狀態及其他詳細資料）</span><br>docker stats &lt;容器ID|名稱&gt;            <span class="hljs-comment"># 查看各Container的CPU、記憶體及網路使用</span><br>docker <span class="hljs-built_in">exec</span> &lt;容器ID|名稱&gt; [COMMAND]   <span class="hljs-comment"># 在外部向Container內執行指令</span><br>docker logs &lt;容器ID|名稱&gt;             <span class="hljs-comment"># 將Container內的輸出顯示到螢幕上</span><br>docker service <span class="hljs-built_in">ls</span>                     <span class="hljs-comment"># 列出Service狀態</span><br>docker service logs &lt;服務ID|名稱&gt;     <span class="hljs-comment"># 將Service內的輸出顯示到螢幕上</span><br></code></pre></td></tr></table></figure><ul><li><p>容器相關</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker ps                                       <span class="hljs-comment"># 查看狀態</span><br>docker ps -a                                    <span class="hljs-comment"># 查看所有狀態</span><br>docker run -it --name &lt;name&gt; &lt;image&gt; &lt;<span class="hljs-built_in">command</span>&gt;  <span class="hljs-comment"># 新建、啟動並執行指令</span><br>docker start &lt;container&gt;                        <span class="hljs-comment"># 啟動</span><br>docker stop &lt;container&gt;                         <span class="hljs-comment"># 停止</span><br>docker restart &lt;container&gt;                      <span class="hljs-comment"># 重啟</span><br>docker <span class="hljs-built_in">rm</span> &lt;container&gt;                           <span class="hljs-comment"># 移除</span><br></code></pre></td></tr></table></figure></li><li><p>映像檔相關</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker build -t &lt;image&gt;[:tag] &lt;path&gt;            <span class="hljs-comment"># 從dockerfile建立</span><br>docker images                                   <span class="hljs-comment"># 列出</span><br>docker image <span class="hljs-built_in">ls</span>                                 <span class="hljs-comment"># 列出</span><br>docker image <span class="hljs-built_in">rm</span>                                 <span class="hljs-comment"># 移除</span><br></code></pre></td></tr></table></figure></li></ul><p>因Docker可能裝在root權限底下，如沒有root使用Docker的權限，請在各指令前加sudo！</p><h3 id="查看容器使用狀態"><a href="#查看容器使用狀態" class="headerlink" title="查看容器使用狀態"></a>查看容器使用狀態</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker ps<br>$ docker ps -a  <span class="hljs-comment"># 查看所有容器使用狀態</span><br>CONTAINER ID    IMAGE                   COMMAND CREATED     STATUS      PORTS                               NAMES<br>c7ee35c5de98    127.0.0.1:5000/*:3.3.0  <span class="hljs-string">&quot;/…&quot;</span>    7 days ago  Up 7 days   0.0.0.0:8002-&gt;8000/tcp, :::8002-&gt;8000/tcp  qpesums_web<br></code></pre></td></tr></table></figure><p>Container的使用狀態會列出Container ID、所使用的IMAGE（映像檔）位置、啟動容器之後會執行的COMMAND（指令）、哪時候被CREATED、目前的STATUS、對應到的PORTS（連接埠），以及Container的NAMES（名稱）。</p><p>若後面不加任何options僅會列出正在運行的Container。</p><h3 id="查看各Container的CPU、記憶體及網路使用"><a href="#查看各Container的CPU、記憶體及網路使用" class="headerlink" title="查看各Container的CPU、記憶體及網路使用"></a>查看各Container的CPU、記憶體及網路使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker stats &lt;容器ID|名稱&gt;<br>docker stats --no-stream          <span class="hljs-comment"># 不滾動顯示</span><br></code></pre></td></tr></table></figure><h3 id="在外部向容器內執行指令"><a href="#在外部向容器內執行指令" class="headerlink" title="在外部向容器內執行指令"></a>在外部向容器內執行指令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker <span class="hljs-built_in">exec</span><br>Usage: docker <span class="hljs-built_in">exec</span> [OPTIONS] CONTAINER COMMAND [ARG...]<br>$ docker <span class="hljs-built_in">exec</span> -it &lt;Container ID|NAME&gt; bash<br></code></pre></td></tr></table></figure><p>表示進入Container後第一個執行的是bash介面。</p><h3 id="列出Docker服務並查詢服務狀態"><a href="#列出Docker服務並查詢服務狀態" class="headerlink" title="列出Docker服務並查詢服務狀態"></a>列出Docker服務並查詢服務狀態</h3><h4 id="列出Docker服務"><a href="#列出Docker服務" class="headerlink" title="列出Docker服務"></a>列出Docker服務</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ docker service <span class="hljs-built_in">ls</span><br>ID              NAME        MODE    REPLICAS    IMAGE                   PORTS<br>zo97osyy73we    qpeplus     global  3/3         127.0.0.1:5000/*:3.3.0  *:8000-&gt;8000/tcp<br></code></pre></td></tr></table></figure><p>將會列出各個服務的ID、NAME（名稱）、MODE（模式）、REPLICAS（複本）、所使用到的IMAGE（映像檔），以及所對應到的PORTS（連接埠）。</p><h4 id="查詢服務狀態"><a href="#查詢服務狀態" class="headerlink" title="查詢服務狀態"></a>查詢服務狀態</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker service logs &lt;ID|NAME&gt;<br></code></pre></td></tr></table></figure><h3 id="查看Swarm-Nodes"><a href="#查看Swarm-Nodes" class="headerlink" title="查看Swarm Nodes"></a>查看Swarm Nodes</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker node <span class="hljs-built_in">ls</span><br></code></pre></td></tr></table></figure><p>再利用查到的ID或名稱去查詢該服務狀態。</p><h3 id="移除多餘容器-container-、網路-network-、映像-image-、數據卷-volume"><a href="#移除多餘容器-container-、網路-network-、映像-image-、數據卷-volume" class="headerlink" title="移除多餘容器(container)、網路(network)、映像(image)、數據卷(volume)"></a>移除多餘容器(container)、網路(network)、映像(image)、數據卷(volume)</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs console">docker container prune        # 移除未用容器<br>docker network prune          # 移除未用網路<br>docker image prune            # 移除未用映像<br>docker volume prune           # 移除未用數據卷<br>docker system prune           # 移除所有(Docker 17.06.0前包含數據卷)<br>docker system prune --volumes # 移除所有包含數據卷<br></code></pre></td></tr></table></figure><p>[OPTIONS]有<code>-a</code>及<code>-f</code>。</p><h3 id="其他指令"><a href="#其他指令" class="headerlink" title="其他指令"></a>其他指令</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs console">docker pull &lt;映像檔名稱&gt;:&lt;版本號&gt;             # 拉取映像檔（未啟動容器）<br>docker run &lt;映像檔名稱&gt;:&lt;版本號&gt;              # 從映像檔啟動容器（若本機無該映像檔，則從遠端拉取）<br>docker rename &lt;舊容器名稱|ID&gt; &lt;新容器名稱&gt;    # 容器更名<br>docker version                                # 顯示詳細版本<br></code></pre></td></tr></table></figure><h4 id="DOCKER-RUN"><a href="#DOCKER-RUN" class="headerlink" title="DOCKER RUN"></a>DOCKER RUN</h4><p>功能：從映像檔啟動容器。</p><ul><li><code>-d</code> - 在背景運行容器，並列出容器ID</li><li><code>-i</code> - 保持stdin</li><li><code>-t</code> - 分配pseudo-TTY</li><li><code>-p &lt;host_port&gt;:&lt;container_port&gt;</code> - 本機的通訊埠對應到容器的通訊埠</li><li><code>-v, --volume &lt;host_dir&gt;:&lt;container_dir&gt;</code> - 掛載本機目錄至容器(自動建立)</li><li><code>--mount &lt;type=bind,source=host_dir,target=container_dir&gt;</code> - 掛載本機目錄至容器</li><li><code>-w, --workdir &lt;container_dir&gt;</code> - 指定工作目錄</li><li><code>--name &lt;name&gt;</code> - 指定容器名稱</li></ul><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs console">docker run &lt;image&gt;[:&lt;tag&gt;]                            # 從映像檔啟動容器<br>docker run --name &lt;name&gt; &lt;image&gt;                      # 指定容器名稱<br>docker run -dp &lt;host_port&gt;:&lt;container_port&gt; &lt;image&gt;   # 指定通訊埠並在背景運行<br>docker run -it --name &lt;name&gt; -v &lt;host_dir&gt;:&lt;container_dir&gt; &lt;image&gt; &lt;command&gt; # 從映像檔啟動、掛載目錄並進入容器維持輸入<br></code></pre></td></tr></table></figure><h3 id="DOCKERFILE"><a href="#DOCKERFILE" class="headerlink" title="DOCKERFILE"></a>DOCKERFILE</h3><p>若現有的image儲存庫無法滿足功能需求，可以透過dockerfile，在現有的image儲存庫上，構建自己的image。</p><ul><li><p>Dockerfile關鍵字使用說明</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> &lt;image&gt;[:&lt;tag&gt;]                          <span class="hljs-comment"># 映像檔:版號</span><br><span class="hljs-keyword">ADD</span><span class="language-bash"> [--<span class="hljs-built_in">chown</span>=&lt;user&gt;:&lt;group&gt;] &lt;src&gt;... &lt;dest&gt;  <span class="hljs-comment"># 從&lt;src&gt;複製至image的&lt;dest&gt;處(支援從遠端下載，tar.gz檔自動解壓縮)</span></span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> [--<span class="hljs-built_in">chown</span>=&lt;user&gt;:&lt;group&gt;] &lt;src&gt;... &lt;dest&gt; <span class="hljs-comment"># 從&lt;src&gt;複製至image的&lt;dest&gt;處(僅支援本地複製)</span></span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> &lt;path&gt;                                <span class="hljs-comment"># 設定工作目錄</span></span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> &lt;<span class="hljs-built_in">command</span>&gt;                                 <span class="hljs-comment"># 在當前image上再執行指令並提交結果</span></span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> [<span class="hljs-string">&quot;executable&quot;</span>, <span class="hljs-string">&quot;param1&quot;</span>, <span class="hljs-string">&quot;param2&quot;</span>]        <span class="hljs-comment"># 在當前image上再執行指令並提交結果</span></span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> &lt;<span class="hljs-built_in">command</span>&gt;                                 <span class="hljs-comment"># 執行中容器提供初始指令</span></span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> [<span class="hljs-string">&quot;executable&quot;</span>, <span class="hljs-string">&quot;param1&quot;</span>, <span class="hljs-string">&quot;param2&quot;</span>]        <span class="hljs-comment"># 2個以上CMD指令只會運行最後1個</span></span><br><span class="hljs-keyword">USER</span> &lt;<span class="hljs-keyword">user</span>&gt;[:&lt;group&gt;]                         <span class="hljs-comment"># 設定使用者及群組</span><br><span class="hljs-keyword">USER</span> &lt;uid&gt;[:&lt;gid&gt;]                            <span class="hljs-comment"># 設定使用者及群組</span><br></code></pre></td></tr></table></figure></li><li><p>Dockerfile其他說明</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> &lt;base_image&gt; AS &lt;stage_name&gt;             <span class="hljs-comment"># 命名提高可讀性</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> --from=&lt;stage_name&gt;                      <span class="hljs-comment"># 可複製image</span></span><br></code></pre></td></tr></table></figure></li></ul><p>寫完dockerfile之後，再利用<code>docker build</code>建立自己的映像檔。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs console">docker build -t &lt;映像檔名稱&gt;[:&lt;tag&gt;] . --no-cache # 沒有tag時預設為latest，確定Dockerfile有放在同目錄下，--no-cache是避免在build的時候被cache住<br>docker images                                     # 查看是否有build成功<br></code></pre></td></tr></table></figure><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> centos:<span class="hljs-number">8</span>                   <span class="hljs-comment"># 使用到image名稱及版本號</span><br><span class="hljs-keyword">LABEL</span><span class="language-bash"> maintainer=satoshi        <span class="hljs-comment"># 維護者資訊</span></span><br><span class="hljs-comment"># MAINTAINER satoshi            # 已棄用寫法(維護者資訊)</span><br><br><span class="hljs-keyword">ARG</span> PROXY                       <span class="hljs-comment"># 只在build時存在的變數(可從內部或外部設值，例如：docker build --build-arg PROXY=http://proxy.xxx.com.tw/:1234 .)</span><br><span class="hljs-keyword">ENV</span> http_proxy=$&#123;PROXY&#125;         <span class="hljs-comment"># 設定環境變數(在build及run時存在的變數)</span><br><span class="hljs-keyword">ENV</span> https_proxy=$&#123;PROXY&#125;<br><br><span class="hljs-keyword">ADD</span><span class="language-bash"> run.py test.txt /           <span class="hljs-comment"># 將local檔案複製到image裡(tar.gz檔會自動解壓縮)</span></span><br><br><span class="hljs-keyword">RUN</span><span class="language-bash"> yum install -y wget         <span class="hljs-comment"># 安裝這個image需要的套件</span></span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">cd</span> /                        <span class="hljs-comment"># 切換到根目錄</span></span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> [<span class="hljs-string">&quot;/run.py&quot;</span> , <span class="hljs-string">&quot;test.txt&quot;</span>]    <span class="hljs-comment"># docker run時做的指令</span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Anaconda安裝套件說明</title>
    <link href="/blog/2023/03/16/Anaconda%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6%E8%AA%AA%E6%98%8E/"/>
    <url>/blog/2023/03/16/Anaconda%E5%AE%89%E8%A3%9D%E5%A5%97%E4%BB%B6%E8%AA%AA%E6%98%8E/</url>
    
    <content type="html"><![CDATA[<h2 id="基本指令"><a href="#基本指令" class="headerlink" title="基本指令"></a>基本指令</h2><p>裝完後預設工作環境為base。</p><h3 id="版號說明"><a href="#版號說明" class="headerlink" title="版號說明"></a>版號說明</h3><p>MAIN.MINOR.PATCH (e.g., Python 3.11.0, conda 22.9.0)</p><h3 id="conda相關"><a href="#conda相關" class="headerlink" title="conda相關"></a>conda相關</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs console">conda --version                           # 檢視目前conda版本<br>conda --help                              # 查看conda指令說明文件<br>conda info                                # 查看當下工作環境設定<br>conda config --add channels conda-forge   # 增加套件下載通道至.condarc<br></code></pre></td></tr></table></figure><h3 id="安裝套件"><a href="#安裝套件" class="headerlink" title="安裝套件"></a>安裝套件</h3><ul><li><p>透過conda方式：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs console">conda install &lt;套件名稱&gt;<br>conda install &lt;套件名稱&gt; -n &lt;指定環境&gt;<br></code></pre></td></tr></table></figure><ul><li><p>搬遷環境（方式一）：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs console">conda env export -n &lt;環境名稱&gt; -f environment.yml   # 輸出環境套件階層列表<br>conda env create -n &lt;環境名稱&gt;                      # 建立環境（預設：當前目錄的environment.yml）<br></code></pre></td></tr></table></figure></li><li><p>搬遷環境（方式二）：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs console">conda list -e &gt; requirements.txt                    # 輸出套件列表（非階層式）<br>conda create --file requirements.txt                # 建立環境<br></code></pre></td></tr></table></figure></li></ul></li><li><p>透過pip方式：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console">pip install &lt;套件名稱&gt;<br></code></pre></td></tr></table></figure><ul><li><p>搬遷環境</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">pip freeze -l &gt; requirements.txt  <span class="hljs-comment"># 輸出套件列表</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">pip install -r requirements.txt   <span class="hljs-comment"># 安裝套件列表</span></span><br>  --force-reinstall<br>  --ignore-installed<br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="套件相關"><a href="#套件相關" class="headerlink" title="套件相關"></a>套件相關</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs console">-e, --export &gt; 檔案名稱   # 輸出檔案<br>-n, --name 環境名稱<br>-p, --prefix 環境路徑<br>--json                    # 輸出成json檔<br></code></pre></td></tr></table></figure><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs console">conda list                                # 列出當下工作環境下所有套件<br>conda list -n &lt;環境名稱&gt;                  # 列出該工作環境下所有套件<br>conda list [正規表示式]                   # 列出當下工作環境下部分套件<br>conda list -e &gt; &lt;檔案名稱&gt;                # 輸出給conda create --file<br>conda update &lt;套件名稱&gt;                   # 更新指定套件<br>conda update --all                        # 更新全部套件<br>conda remove &lt;套件名稱&gt;                   # 移除當下工作環境下之套件<br>conda remove -n &lt;環境名稱&gt; &lt;套件名稱&gt;     # 移除指定工作環境下之套件<br></code></pre></td></tr></table></figure><h3 id="虛擬工作環境相關"><a href="#虛擬工作環境相關" class="headerlink" title="虛擬工作環境相關"></a>虛擬工作環境相關</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs console">conda create -n &lt;環境名稱&gt; &lt;套件名稱=版本&gt;        # 建立新的工作環境<br>conda remove -n &lt;環境名稱&gt; &lt;套件名稱&gt;             # 移除指定工作環境下之套件<br>conda remove -n &lt;環境名稱&gt; --all                  # 移除指定工作環境<br>conda rename -n &lt;原環境名稱&gt; &lt;新環境名稱&gt;         # 更名指定工作環境<br>conda env list                                    # 列出有哪些工作環境<br>conda env export -n &lt;環境名稱&gt; -f &lt;環境名稱&gt;.yml  # 輸出該工作環境套件列表<br>conda activate [環境名稱]                         # 啟動工作環境，未指定預設為base<br>conda deactivate                                  # 停用工作環境<br></code></pre></td></tr></table></figure><p>建立新的工作環境，可自行指定安裝某Python版本，例如：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console">conda create -n my_env python=3.9<br></code></pre></td></tr></table></figure><h2 id="設定proxy"><a href="#設定proxy" class="headerlink" title="設定proxy"></a>設定proxy</h2><p>由於氣象局內有專用Proxy設定，如要順利連網下載安裝、更新，必須使用以下設定：</p><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs console">export http_proxy=http://proxy.cwb.gov.tw:8888<br>export https_proxy=http://proxy.cwb.gov.tw:8888<br></code></pre></td></tr></table></figure><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs console">set http_proxy=http://proxy.cwb.gov.tw:8888<br>set https_proxy=http://proxy.cwb.gov.tw:8888<br></code></pre></td></tr></table></figure><p>以上設定僅在該次登入有效，如要在下次登入也能沿用此次設定，必須寫入家目錄下的.bashrc設定（Linux）／環境變數（Windows）。</p><p>以Windows 10為例，環境變數設定在：<br><strong>控制台&gt;系統及安全性&gt;系統&gt;進階系統設定&gt;進階&gt;環境變數&gt;系統變數&gt;新增</strong></p><table><thead><tr><th align="left">變數</th><th align="left">值</th></tr></thead><tbody><tr><td align="left">HTTP_PROXY</td><td align="left"><a href="http://proxy.cwb.gov.tw:8888/">http://proxy.cwb.gov.tw:8888</a></td></tr><tr><td align="left">HTTPS_PROXY</td><td align="left"><a href="http://proxy.cwb.gov.tw:8888/">http://proxy.cwb.gov.tw:8888</a></td></tr></tbody></table><p>Windows系統變數不區分大小寫。</p><h2 id="環境遷移"><a href="#環境遷移" class="headerlink" title="環境遷移"></a>環境遷移</h2><h3 id="方式一：打包帶走"><a href="#方式一：打包帶走" class="headerlink" title="方式一：打包帶走"></a>方式一：打包帶走</h3><p>首先須先在要打包的環境中安裝conda-pack套件，以使用<code>conda pack</code>及<code>conda unpack</code>指令來打包及解包。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console">conda install -c conda-forge conda-pack   # 安裝conda-pack套件<br></code></pre></td></tr></table></figure><p>接著選擇要打包的工作環境，打包產生<code>&lt;環境名稱&gt;.tar.gz</code>檔。再利用tar在欲放置工作環境之目錄解包。</p><blockquote><p>確認來源與目的系統環境同為Windows或Linux。</p></blockquote><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs console">conda pack -n &lt;環境名稱&gt; --ignore-editable-packages   # 打包／壓縮<br>mkdir -p &lt;目錄名稱&gt;                           # 新增欲放置工作環境之目錄<br>tar -xzf &lt;環境名稱&gt;.tar.gz -C &lt;目錄名稱&gt;  # 解壓縮／解包<br></code></pre></td></tr></table></figure><p>解包後便可以啟動工作環境了，啟動後還需要再一步<code>conda unpack</code>。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">conda activate &lt;環境名稱&gt;</span><br>(&lt;環境名稱&gt;) $ conda unpack # 或conda-unpack<br></code></pre></td></tr></table></figure><p>這一步非常關鍵，否則會導致遷移失敗。至此，conda環境遷移結束。</p><h3 id="方式二：從清單安裝"><a href="#方式二：從清單安裝" class="headerlink" title="方式二：從清單安裝"></a>方式二：從清單安裝</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs console">conda env export -n &lt;環境名稱&gt; -f &lt;套件清單檔案(.yml)&gt;    # 輸出環境套件階層清單yaml檔案<br>conda env create -n &lt;環境名稱&gt; -f &lt;套件清單檔案(.yml)&gt;    # 從清單安裝套件<br></code></pre></td></tr></table></figure><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://medium.com/datainpoint/python-essentials-conda-quickstart-1f1e9ecd1025">https://medium.com/datainpoint/python-essentials-conda-quickstart-1f1e9ecd1025</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Anaconda</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Anaconda</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Django3架站實戰筆記</title>
    <link href="/blog/2023/01/18/Django3%E6%9E%B6%E7%AB%99%E5%AF%A6%E6%88%B0%E7%AD%86%E8%A8%98/"/>
    <url>/blog/2023/01/18/Django3%E6%9E%B6%E7%AB%99%E5%AF%A6%E6%88%B0%E7%AD%86%E8%A8%98/</url>
    
    <content type="html"><![CDATA[<h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">django-admin startproject &lt;專案名稱&gt;      <span class="hljs-comment"># 建立專案</span></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">python manage.py startapp &lt;應用程式名稱&gt;  <span class="hljs-comment"># 新增應用程式</span></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">python manage.py makemigrations           <span class="hljs-comment"># 建立資料檔</span></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">python manage.py migrate                  <span class="hljs-comment"># 同步模型與資料庫</span></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">python manage.py runserver                <span class="hljs-comment"># 啟動server</span></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">python manage.py createsuperuser          <span class="hljs-comment"># 建立superuser</span></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">python manage.py changepassword admin     <span class="hljs-comment"># 修改admin密碼</span></span><br></code></pre></td></tr></table></figure><h2 id="安裝與建立專案、應用程式"><a href="#安裝與建立專案、應用程式" class="headerlink" title="安裝與建立專案、應用程式"></a>安裝與建立專案、應用程式</h2><h3 id="安裝Django套件"><a href="#安裝Django套件" class="headerlink" title="安裝Django套件"></a>安裝Django套件</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">conda install django</span><br></code></pre></td></tr></table></figure><h3 id="建立Django專案"><a href="#建立Django專案" class="headerlink" title="建立Django專案"></a>建立Django專案</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">django-admin startproject &lt;專案名稱&gt;</span><br></code></pre></td></tr></table></figure><p>建立專案之後，會在該目錄下建立兩層&lt;專案名稱&gt;的目錄，&lt;專案名稱&gt;以project1為例：</p><ul><li>\project1 - 專案主目錄<ul><li>manage.py - 專案管理（建立app、啟動server和Shell）</li><li>\project1 - 專案設定<ul><li>__init__.py</li><li>asgi.py - asgi伺服器和Django介面設定檔</li><li>settings.py - 專案設定檔</li><li>urls.py - url配置檔</li><li>wsgi.py - 網頁伺服器和Django介面設定檔</li></ul></li></ul></li></ul><h3 id="建立Application應用程式"><a href="#建立Application應用程式" class="headerlink" title="建立Application應用程式"></a>建立Application應用程式</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">python manage.py startapp &lt;應用程式名稱&gt;</span><br></code></pre></td></tr></table></figure><p>建立應用程式之後，會在第一層project1目錄下建立&lt;應用程式名稱&gt;目錄，&lt;應用程式名稱&gt;以app1為例：</p><ul><li>\project1<ul><li>manage.py</li><li>\project1</li><li>\app1 - 應用程式<ul><li>\migrations - 資料表架構、版本紀錄</li><li>admin.py</li><li>apps.py</li><li>models.py</li><li>tests.py</li><li>views.py</li></ul></li></ul></li></ul><h4 id="建立必要目錄"><a href="#建立必要目錄" class="headerlink" title="建立必要目錄"></a>建立必要目錄</h4><ul><li>\project1<ul><li>manage.py</li><li>\project1</li><li>\app1</li><li>\templates - 放置模板(.html檔)</li><li>\static - 放置靜態檔案<ul><li>\css</li><li>\js</li><li>\img</li></ul></li></ul></li></ul><h4 id="建立migration資料檔"><a href="#建立migration資料檔" class="headerlink" title="建立migration資料檔"></a>建立migration資料檔</h4><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">python manage.py makemigrations</span><br></code></pre></td></tr></table></figure><h4 id="模型與資料庫同步"><a href="#模型與資料庫同步" class="headerlink" title="模型與資料庫同步"></a>模型與資料庫同步</h4><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">python manage.py migrate</span><br></code></pre></td></tr></table></figure><p>會在專案目錄下建立<code>db.sqlite3</code>檔。</p><h4 id="啟動server"><a href="#啟動server" class="headerlink" title="啟動server"></a>啟動server</h4><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">python manage.py runserver</span><br></code></pre></td></tr></table></figure><h3 id="環境設定"><a href="#環境設定" class="headerlink" title="環境設定"></a>環境設定</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python">BASE_DIR = Path(__file__).resolve().parent.parent<br>DEBUG = <span class="hljs-literal">True</span><br>ALLOWED_HOSTS = []  <span class="hljs-comment"># 若關閉除錯模式，則需指定該參數</span><br>INSTALLED_APPS = [<br>  ...<br>  <span class="hljs-string">&#x27;app1&#x27;</span>            <span class="hljs-comment"># 新增建立的應用程式</span><br>]<br>TEMPLATES = [<br>  &#123;<br>    <span class="hljs-string">&quot;BACKEND&quot;</span>: <span class="hljs-string">&quot;django.template.backends.django.DjangoTemplates&quot;</span>,<br>    <span class="hljs-string">&quot;DIRS&quot;</span>: [BASE_DIR / <span class="hljs-string">&#x27;templates&#x27;</span>],  <span class="hljs-comment"># 指定模板路徑</span><br>        <span class="hljs-string">&quot;APP_DIRS&quot;</span>: <span class="hljs-literal">True</span>,<br>        ...<br>  &#125;,<br>]<br>LANGUAGE_CODE = <span class="hljs-string">&quot;zh-hant&quot;</span>   <span class="hljs-comment"># 改為繁體中文</span><br>TIME_ZONE = <span class="hljs-string">&quot;Asia/Taipei&quot;</span>   <span class="hljs-comment"># 改為臺北時區</span><br>STATICFILES_DIRS = [        <span class="hljs-comment"># 加入static路徑</span><br>    BASE_DIR / <span class="hljs-string">&quot;static&quot;</span>,<br>]<br></code></pre></td></tr></table></figure><h4 id="更改資料庫"><a href="#更改資料庫" class="headerlink" title="更改資料庫"></a>更改資料庫</h4><p>可使用PostgreSQL、MariaDB、MySQL或Oracle。</p><p>以MySQL為例：</p><ol><li><a href="https://dev.mysql.com/downloads/mysql/">安裝MySQL Server</a>。</li><li><a href="https://blog.hungwin.com.tw/windows-server-mysql-community-install/">安裝步驟說明</a>。</li></ol><p>安裝完請先確定MySQL Server是否有新增至環境變數。</p><ul><li><p>登入MySQL：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">mysql -u 使用者帳號 -p</span><br>Enter password: ********<br></code></pre></td></tr></table></figure></li><li><p>常用SQL指令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql">mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> VERSION();  <span class="hljs-comment">/* 檢查資料庫版本 */</span><br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">USER</span>();     <span class="hljs-comment">/* 檢查目前登入使用者 */</span><br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SHOW</span> ENGINES \G    <span class="hljs-comment">/* 顯示目前資料庫支援的儲存引擎 */</span><br><br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">CREATE</span> DATABASE 資料庫名稱   <span class="hljs-comment">/* 建立資料庫 */</span><br>mysql<span class="hljs-operator">&gt;</span> USE 資料庫名稱               <span class="hljs-comment">/* 進入資料庫 */</span><br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">DROP</span> DATABASE 資料庫名稱     <span class="hljs-comment">/* 移除資料庫 */</span><br></code></pre></td></tr></table></figure></li></ul><p>原有環境資料庫設定為SQLite3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">DATABASES = &#123;<br>    <span class="hljs-string">&quot;default&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;ENGINE&quot;</span>: <span class="hljs-string">&quot;django.db.backends.sqlite3&quot;</span>, <span class="hljs-comment"># 預設</span><br>        <span class="hljs-string">&quot;NAME&quot;</span>: BASE_DIR / <span class="hljs-string">&quot;db.sqlite3&quot;</span>,<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>改為MySQL的設定：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">DATABASES = &#123;<br>    <span class="hljs-string">&quot;default&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;ENGINE&quot;</span>: <span class="hljs-string">&quot;django.db.backends.mysql&quot;</span>,<br>        <span class="hljs-string">&quot;NAME&quot;</span>: <span class="hljs-string">&quot;資料庫名稱&quot;</span>,<br>        <span class="hljs-string">&quot;USER&quot;</span>: <span class="hljs-string">&quot;使用者名稱&quot;</span>,<br>        <span class="hljs-string">&quot;PASSWORD&quot;</span>: <span class="hljs-string">&quot;密碼&quot;</span>,<br>        <span class="hljs-string">&quot;HOST&quot;</span>: <span class="hljs-string">&quot;localhost&quot;</span>,<br>        <span class="hljs-string">&quot;PORT&quot;</span>: <span class="hljs-string">&quot;3306&quot;</span>,<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>或使用配置檔：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">DATABASES = &#123;<br>    <span class="hljs-string">&quot;default&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;ENGINE&quot;</span>: <span class="hljs-string">&quot;django.db.backends.mysql&quot;</span>,<br>        <span class="hljs-string">&quot;OPTIONS&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;read_default_file&quot;</span>: <span class="hljs-string">&quot;配置檔路徑(my.cnf)&quot;</span>,<br>        &#125;,<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs my.cnf">[client]<br>host = localhost<br>database = 資料庫名稱<br>user = 使用者名稱<br>password = 密碼<br>default-character-set = utf8<br>port = 3306<br></code></pre></td></tr></table></figure><hr><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ol><li><a href="https://blog.hungwin.com.tw/windows-server-mysql-community-install/">https://blog.hungwin.com.tw/windows-server-mysql-community-install/</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>Django</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Django</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用JS撈網路資料</title>
    <link href="/blog/2022/09/06/%E5%88%A9%E7%94%A8JS%E6%92%88%E7%B6%B2%E8%B7%AF%E8%B3%87%E6%96%99/"/>
    <url>/blog/2022/09/06/%E5%88%A9%E7%94%A8JS%E6%92%88%E7%B6%B2%E8%B7%AF%E8%B3%87%E6%96%99/</url>
    
    <content type="html"><![CDATA[<h2 id="跨來源資源共用（Cross-Origin-Resource-Sharing，CORS）"><a href="#跨來源資源共用（Cross-Origin-Resource-Sharing，CORS）" class="headerlink" title="跨來源資源共用（Cross-Origin Resource Sharing，CORS）"></a>跨來源資源共用（Cross-Origin Resource Sharing，CORS）</h2><p><img src="/blog/images/blog/%E5%88%A9%E7%94%A8JS%E6%92%88%E7%B6%B2%E8%B7%AF%E8%B3%87%E6%96%99/CORS.png" alt="檢查流程"></p>]]></content>
    
    
    <categories>
      
      <category>HTML</category>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git一二三，同步真簡單</title>
    <link href="/blog/2022/08/24/Git%E7%9B%B8%E9%97%9C%E6%8C%87%E4%BB%A4/"/>
    <url>/blog/2022/08/24/Git%E7%9B%B8%E9%97%9C%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>Git是一個多工團隊協作版控的好用工具，雖然一開始的概念有點小複雜，我也是花了好一陣子才漸漸搞懂它，因此。對於初學者而言，在了解Git指令之前，先要有local（本地）與remote（遠端）repository（儲存庫）的概念，以及各自的branch（分支）之後，或許會比較好入手。</p><h2 id="Git指令全集"><a href="#Git指令全集" class="headerlink" title="Git指令全集"></a>Git指令全集</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><ol start="0"><li><p>初始化git工作目錄</p><p>狀態：未初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init<br></code></pre></td></tr></table></figure><p>初始化後，目錄下新增.git目錄。</p></li><li><p>工作區（Working Directory）</p><p>狀態：未追蹤（Untracked files，對於新加入檔案或提交後新建立檔案）、已更改（Changes not staged for commit，對於提交後再被修改之檔案）</p><p>直接編輯的地方，在桌機上可直接操作檔案。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 工作區 -&gt; 暫存區</span><br>$ git add .    <span class="hljs-comment"># 將檔案從工作目錄加入至暫存區</span><br></code></pre></td></tr></table></figure></li><li><p>暫存區（Staging Area）</p><p>狀態：等待提交（Changes to be committed）</p><p>數據暫時存放的區域，介於工作區與儲存庫之間。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 暫存區 -&gt; 儲存庫</span><br>$ git commit                   <span class="hljs-comment"># 新開編輯器編輯提交訊息</span><br>$ git commit -m <span class="hljs-string">&quot;提交訊息&quot;</span>     <span class="hljs-comment"># 將暫存區內容移至儲存區</span><br>$ git commit -am <span class="hljs-string">&quot;提交訊息&quot;</span>    <span class="hljs-comment"># 從工作區移至儲存庫，對已在儲存庫的檔案有效</span><br></code></pre></td></tr></table></figure></li><li><p>儲存庫／數據庫（Repository，簡稱repo）</p><p>狀態：已提交（Committed）</p><p>存放已經提交的數據。</p><ol><li><p>本地端儲存庫（Local）</p><p>為了方便自己使用的儲存庫，通常是個人開發的電腦或機台。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 本地端 -&gt; 遠端儲存庫</span><br>$ git push        <span class="hljs-comment"># 推送到遠端儲存庫</span><br><br><span class="hljs-comment"># 本地端複製</span><br>$ git <span class="hljs-built_in">clone</span> &lt;本地目錄名稱&gt; &lt;新本地目錄名稱|路徑&gt;  <span class="hljs-comment"># 複製本地儲存庫至指定目錄</span><br></code></pre></td></tr></table></figure></li><li><p>遠端儲存庫（Remote）</p><p>為了讓多人共享而建立的儲存庫，通常是一個共用的伺服器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 遠端 -&gt; 本地端儲存庫</span><br>$ git fetch &lt;遠端名稱&gt; &lt;遠端分支名稱&gt;     <span class="hljs-comment"># 下載遠端指定分支</span><br>$ git fetch --all                         <span class="hljs-comment"># 下載遠端所有分支</span><br>$ git <span class="hljs-built_in">clone</span> &lt;遠端名稱&gt;                    <span class="hljs-comment"># 下載遠端預設分支</span><br>$ git <span class="hljs-built_in">clone</span> &lt;遠端名稱&gt; -b &lt;本地分支名稱&gt;  <span class="hljs-comment"># 下載遠端預設分支至指定本地分支</span><br>$ git <span class="hljs-built_in">clone</span> &lt;遠端名稱&gt; &lt;目錄名稱|路徑&gt;    <span class="hljs-comment"># 下載遠端預設分支至指定目錄</span><br><br><span class="hljs-comment"># 遠端儲存庫 -&gt; 工作區</span><br>$ git pull &lt;遠端名稱&gt; &lt;遠端分支名稱&gt;:&lt;本地分支名稱&gt;   <span class="hljs-comment"># git fetch + git merge</span><br><br></code></pre></td></tr></table></figure></li></ol></li></ol><h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init                  <span class="hljs-comment"># 進行版本控制（此時就會有.git目錄產生）</span><br>git status                <span class="hljs-comment"># git狀態</span><br>git add .                 <span class="hljs-comment"># 將檔案加至暫存區</span><br>git commit -m <span class="hljs-string">&quot;提交訊息&quot;</span>  <span class="hljs-comment"># 提交檔案至儲存庫</span><br>git filter-branch --tree-filter <span class="hljs-string">&quot;rm -f config/database.yml&quot;</span>   <span class="hljs-comment"># 針對過去的提交批次修改紀錄並提交</span><br></code></pre></td></tr></table></figure><h3 id="將存放庫初始化"><a href="#將存放庫初始化" class="headerlink" title="將存放庫初始化"></a>將存放庫初始化</h3><p>首先必須要先將Git本地的存放庫初始化啦！</p><p>到了想要透過Git監控的目錄git init，此時在目錄下會多出.git的隱藏目錄，這就相當於在VS code下在原始檔控制中的「將存放庫初始化」的功能。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init  <span class="hljs-comment"># 在當前目錄下創建.git以監控版更</span><br></code></pre></td></tr></table></figure><h3 id="查看當前git狀態"><a href="#查看當前git狀態" class="headerlink" title="查看當前git狀態"></a>查看當前git狀態</h3><p>先透過git status來查看當前git狀態。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git status  <span class="hljs-comment"># 查看當前git狀態</span><br>On branch master<br><br>No commits yet<br><br>Untracked files:<br>  (use <span class="hljs-string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="hljs-keyword">in</span> what will be committed)<br>        .gitignore<br></code></pre></td></tr></table></figure><p>從輸出的內容，可以看到目前本地的分支名稱為master、沒有任何commit（提交），以及哪些檔案還沒被add（加入）追蹤（untracked）。</p><p>目錄下可加入.gitignore檔案，裡面的內容可以加入不想同步追蹤的檔案名稱，以將這些檔案排除在git的檢查之外。</p><p>目錄下加入.gitkeep則是強制git在檢查時，將空目錄也涵蓋進來。</p><h3 id="一、add（加入）untracked（未追蹤）檔案至暫存的變更"><a href="#一、add（加入）untracked（未追蹤）檔案至暫存的變更" class="headerlink" title="一、add（加入）untracked（未追蹤）檔案至暫存的變更"></a>一、add（加入）untracked（未追蹤）檔案至暫存的變更</h3><p>當在目錄當中新增的檔案，只要是非空目錄、未被.gitignore排除檢查的檔案，或者並非是另一個含有.git的目錄，都會被列為檢查對象。</p><p>利用VS code的原始檔控制，會自動偵測已變更的檔案（新增的檔案右方會顯示A(Add)、新增後變更的檔案會顯示M(Modified)），在「變更」欄的右方「+」號則可以將新增或變更的檔案加入到暫存的變更；在「暫存的變更」右方「-」號則是可以選擇取消變更的檔案，等修改好再加進去。</p><p>如果利用指令列，則須透過git status來看各個檔案的情況。</p><p>假設我們先新增一個test.md檔，這時候git status會列在untracked，於是我們git add：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add test.md<br></code></pre></td></tr></table></figure><p>這時候再git status，會看到檔案已被加入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Changes to be committed:<br>  (use <span class="hljs-string">&quot;git rm --cached &lt;file&gt;...&quot;</span> to unstage)<br>        new file:   test.md<br></code></pre></td></tr></table></figure><p>如果再修改test.md檔案中的文字，再次git status則會看到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">Changes to be committed:<br>  (use <span class="hljs-string">&quot;git rm --cached &lt;file&gt;...&quot;</span> to unstage)<br>        new file:   test.md<br><br>Changes not staged <span class="hljs-keyword">for</span> commit:<br>  (use <span class="hljs-string">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed)<br>  (use <span class="hljs-string">&quot;git restore &lt;file&gt;...&quot;</span> to discard changes <span class="hljs-keyword">in</span> working directory)<br>        modified:   <span class="hljs-string">&quot;test.md&quot;</span><br></code></pre></td></tr></table></figure><p>代表有一個版本已經加入暫存的變更等待提交，而另一個則是因為我們後來的修改而產生的版本，尚未加入提交的行列。</p><blockquote><p>若是目錄中含有其他git監測的目錄，則無法加入追蹤。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Untracked files:<br>  (use <span class="hljs-string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="hljs-keyword">in</span> what will be committed)<br>        themes/fluid/<br></code></pre></td></tr></table></figure><p>像是Hexo部分目錄本身即含有git版控功能，因此部分目錄無法同步加入追蹤。</p><h3 id="二、新增訊息並commit（提交）"><a href="#二、新增訊息並commit（提交）" class="headerlink" title="二、新增訊息並commit（提交）"></a>二、新增訊息並commit（提交）</h3><p>當我們新增檔案或修改某些檔案裡的文字時，可以利用git commit分批提交更新訊息，把每一次的更新訊息記錄下來：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git commit -m <span class="hljs-string">&quot;add test.md&quot;</span><br>[github 1da2962] revise Git相關指令.md<br> 0 file changed, 1 insertions(+)<br> create mode 100644 <span class="hljs-string">&quot;test.md&quot;</span><br></code></pre></td></tr></table></figure><p>提交之後會顯示提交的分支名稱、提交ID、提交訊息、幾個檔案新增或者被改變。</p><p>每次修改檔案之後，都要記得將檔案再度git add到要提交的行列當中。</p><p>在提交之後，會發現本地端也新增了master分支，代表我們提交的內容會在我們本地的master分支裡。每修改某個檔案都可以在訊息欄做備註。但我們要推送的是遠端分支，而不是本地分支，要確定要提交上去的是哪一個分支。</p><h3 id="三、push（推送）至remote-repo（遠端儲存庫）"><a href="#三、push（推送）至remote-repo（遠端儲存庫）" class="headerlink" title="三、push（推送）至remote repo（遠端儲存庫）"></a>三、push（推送）至remote repo（遠端儲存庫）</h3><p>緊接著，你在工作目錄中陸陸續續新增的檔案，要放到遠端儲存庫供他人使用，就必須先將遠端儲存庫加入路徑之中。Github儲存庫URL在頁面右上角的「code」當中，使用HTTPS或SSH都可以，將想要放置檔案的Github儲存庫URL透過git remote add加入即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote add &lt;遠端名稱&gt; &lt;遠端儲存庫URL&gt;    <span class="hljs-comment"># 將該遠端加入fetch跟push的路徑</span><br>git remote -v                             <span class="hljs-comment"># 查看遠端分支名稱及路徑</span><br>git remote remove &lt;遠端名稱&gt;               <span class="hljs-comment"># 對應之移除指令</span><br>git remote rename &lt;原遠端名稱&gt; &lt;新遠端名稱&gt;  <span class="hljs-comment"># 更改遠端名稱</span><br></code></pre></td></tr></table></figure><p>以名稱為github加入遠端儲存庫為例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git remote add github https://github.com/weijhih1226/blog.git<br>$ git remote -v<br>github    https://github.com/weijhih1226/blog.git (fetch)<br>github    https://github.com/weijhih1226/blog.git (push)<br></code></pre></td></tr></table></figure><p>如果想推送至第2個遠端儲存庫的話，也可以再加入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git remote add gerrit ssh://weijhih1226@gerrit.twindy.com:29418/weather<br>$ git remote -v   <span class="hljs-comment"># 此時</span><br>github    https://github.com/weijhih1226/blog.git (fetch)<br>github    https://github.com/weijhih1226/blog.git (push)<br>gerrit    ssh://weijhih1226@gerrit.twindy.com:29418/weather (fetch)<br>gerrit    ssh://weijhih1226@gerrit.twindy.com:29418/weather (push)<br></code></pre></td></tr></table></figure><p>此時透過指令<code>git remote -v</code>就可以看到有兩個remote repo了。</p><p>如果要查看本地分支與遠端分支的對應可以透過以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git branch -v               <span class="hljs-comment"># 查看branch名稱、commit訊息</span><br>$ git branch -vv              <span class="hljs-comment"># 查看branch名稱（有upstream則會顯示）、commit訊息</span><br>$ git branch -l               <span class="hljs-comment"># 查看分支名稱（本地）</span><br>$ git branch -r               <span class="hljs-comment"># 查看分支名稱（遠端）</span><br>$ git branch -a               <span class="hljs-comment"># 查看所有分支名稱（本地及遠端）</span><br>* master                      <span class="hljs-comment"># 本地分支（目前的分支）</span><br>  remotes/github/gh-pages     <span class="hljs-comment"># 遠端分支</span><br>  remotes/github/main         <span class="hljs-comment"># 遠端分支</span><br></code></pre></td></tr></table></figure><p>從上面git branch -a當中，可以看到因為目前本地端是在master分支底下，而遠端則在github底下有自動抓到2個分支。</p><p>如果要將目前的本地分支的fetch及push與遠端分支對應，使得每次 <code>git fetch</code> &#x2F; <code>git pull</code> 或 <code>git push</code> 不用指定remote repo與branch，可以使用以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git branch -u &lt;remote repo&gt;/&lt;remote branch&gt;   <span class="hljs-comment"># 將遠端儲存庫的分支加入目前本地分支</span><br></code></pre></td></tr></table></figure><p>利用git checkout則可以切換分支。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout &lt;分支名稱&gt;<br>git checkout -b &lt;新的分支名稱&gt;<br></code></pre></td></tr></table></figure><p>例如我們如果想將本地端的檔案同步到遠端的main分支上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout main<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push &lt;遠端名稱&gt; &lt;分支名稱&gt;<br></code></pre></td></tr></table></figure><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push github main<br></code></pre></td></tr></table></figure><h3 id="其他常用指令"><a href="#其他常用指令" class="headerlink" title="其他常用指令"></a>其他常用指令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch &lt;分支名稱&gt;                               <span class="hljs-comment"># 建立本地分支</span><br>git branch -d &lt;分支名稱&gt;                            <span class="hljs-comment"># 刪除本地分支</span><br>git branch &lt;-m|--move&gt; [&lt;舊分支&gt;] &lt;新分支&gt;          <span class="hljs-comment"># 移動／更名分支</span><br>git branch &lt;-M|--move --force&gt; [&lt;舊分支&gt;] &lt;新分支&gt;  <span class="hljs-comment"># 強制移動／更名分支</span><br>git push &lt;遠端名稱&gt; --delete &lt;遠端分支名稱&gt;         <span class="hljs-comment"># 刪除遠端分支</span><br>git push &lt;遠端名稱&gt; :&lt;遠端分支名稱&gt;                 <span class="hljs-comment"># 刪除遠端分支</span><br>git <span class="hljs-built_in">clone</span> &lt;遠端專案URL&gt; -b &lt;分支名稱&gt;               <span class="hljs-comment"># 複製遠端分支</span><br>git pull &lt;遠端名稱&gt; &lt;遠端分支名稱&gt;:&lt;本地分支名稱&gt;   <span class="hljs-comment"># git fetch + git merge</span><br></code></pre></td></tr></table></figure><h4 id="關於git組態"><a href="#關於git組態" class="headerlink" title="關於git組態"></a>關於git組態</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global core.autocrlf <span class="hljs-literal">true</span>      <span class="hljs-comment"># 自動轉換CRLF</span><br>git config --global user.name <span class="hljs-string">&quot;xxx&quot;</span>         <span class="hljs-comment"># 使用者名稱</span><br>git config --global user.email <span class="hljs-string">&quot;xxx@xx.com&quot;</span> <span class="hljs-comment"># 使用者電子郵件</span><br></code></pre></td></tr></table></figure><h4 id="git忽略追蹤"><a href="#git忽略追蹤" class="headerlink" title="git忽略追蹤"></a>git忽略追蹤</h4><ul><li>狀況一：新增過濾條件<strong>後新增的檔案</strong><ul><li>符合規則 Git 就不會去追蹤。</li></ul></li><li>狀況二：新增過濾條件<strong>前新增的檔案</strong><ul><li>沒有額外處理還是會被追蹤。</li></ul><ol><li><p>於專案根目錄新增 <code>.gitignore</code> 檔案。</p></li><li><p>於檔案內新增需要忽略的檔案、目錄等，例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">*.conf</span>          <span class="hljs-comment"># 檔案</span><br><span class="hljs-string">__pycache__/</span>    <span class="hljs-comment"># 目錄</span><br></code></pre></td></tr></table></figure></li><li><p>若以 git status 查看，會發現記錄只有新增一個檔案而已，而這就是因為先有 Git 記錄才新增 .gitignore 檔案，因此進行以下步驟清除快取並重新加入追蹤，才會套用新的 .gitignore 設定：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 清除本機 Git 的快取，就是將所有檔案移除 Git 的追蹤，但沒有刪除檔案</span><br>$ git <span class="hljs-built_in">rm</span> -r --cached .<br><span class="hljs-comment"># 重新加入 Git 追蹤，這時就會重新套入 .gitignore 設定</span><br>$ git add .<br><span class="hljs-comment"># 重新 commit ，並會忽略設定在 .gitignore 的檔案</span><br>$ git commit -m <span class="hljs-string">&#x27;update .gitignore&#x27;</span><br></code></pre></td></tr></table></figure></li></ol></li></ul><hr><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://shichia.medium.com/gitignore-%E5%BF%BD%E7%95%A5%E9%82%A3%E4%BA%9B%E4%B8%8D%E8%A9%B2%E4%B8%8A%E5%82%B3%E7%9A%84-git-%E6%AA%94%E6%A1%88-2031ac4dc679">https://shichia.medium.com/gitignore-忽略那些不該上傳的-git-檔案-2031ac4dc679</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>GitHub</category>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo使用說明</title>
    <link href="/blog/2022/08/23/Hexo%E4%BD%BF%E7%94%A8%E8%AA%AA%E6%98%8E/"/>
    <url>/blog/2022/08/23/Hexo%E4%BD%BF%E7%94%A8%E8%AA%AA%E6%98%8E/</url>
    
    <content type="html"><![CDATA[<h2 id="Hexo初始化"><a href="#Hexo初始化" class="headerlink" title="Hexo初始化"></a>Hexo初始化</h2><p>使用hexo init初始化Hexo的目錄架構。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">D:\&gt;hexo init [自訂目錄名稱]<br></code></pre></td></tr></table></figure><p>或是到自訂名稱目錄內使用hexo init指令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">D:\[自訂目錄名稱]&gt;hexo init<br></code></pre></td></tr></table></figure><p>後面[自訂目錄名稱]以blog為例。</p><h2 id="更換主題"><a href="#更換主題" class="headerlink" title="更換主題"></a>更換主題</h2><ol><li><p>到 <a href="https://hexo.io/themes/">https://hexo.io/themes/</a> 選擇想要的主題。</p></li><li><p>複製該主題的Github網址到本地端。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">D:\blog\themes&gt;git <span class="hljs-built_in">clone</span> [該主題的Github網址]<br></code></pre></td></tr></table></figure></li><li><p>修改themes目錄上一層的_config.yml：</p><p>修改_config.yml中themes項目的主題名稱為剛下載下來的目錄名稱。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Extensions</span><br><span class="hljs-attr">themes:</span> <span class="hljs-string">fluid</span><br><br><span class="hljs-comment"># Deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/weijhih1226/blog.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">gh-pages</span><br></code></pre></td></tr></table></figure></li><li><p>接著執行hexo clean、generate及server，即可看到更換後的主題了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br>hexo generate  <span class="hljs-comment"># hexo g</span><br>hexo server    <span class="hljs-comment"># hexo s</span><br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>GitHub</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用「Hexo」架設個人部落格</title>
    <link href="/blog/2022/07/21/Hexo%E7%B0%A1%E4%BB%8B/"/>
    <url>/blog/2022/07/21/Hexo%E7%B0%A1%E4%BB%8B/</url>
    
    <content type="html"><![CDATA[<p><strong>自</strong>從進入職場、學習不同的程式語言或工具以來，發現累積的說明文件愈來愈多，但卻又沒有一套系統性的整理，遇到問題一時要找就開始有點麻煩了😓另外，很久也沒藉由寫點東西，來反思自己的生活了。希望可以經營一個可以累積過往的程式經驗，又可順便記錄生活種種點點滴滴的部落格，而且重點是要方便記錄跟找尋！於是找到了Hexo。「<a href="https://hexo.io/zh-tw/">Hexo</a>」是一個讓你很容易上手部署自己個人部落格，以及發佈程式類說明文章的套件工具。而且<a href="https://hexo.io/themes/">主題</a>及<a href="https://hexo.io/plugins/">外掛</a>超多任你選擇，只需要懂得一些語法架構，即可做出美美的、與眾不同的網頁！</p><h2 id="安裝及設定-Hexo"><a href="#安裝及設定-Hexo" class="headerlink" title="安裝及設定 Hexo"></a>安裝及設定 Hexo</h2><h3 id="利用-npm-安裝-Hexo"><a href="#利用-npm-安裝-Hexo" class="headerlink" title="利用 npm 安裝 Hexo"></a>利用 npm 安裝 Hexo</h3><p>在安裝Hexo之前，須先安裝<a href="https://nodejs.org/zh-tw/">Node.js</a>，以利用npm來安裝Hexo。</p><p>另外也須安裝<a href="https://git-scm.com/">Git</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-cli -g<br>npm list <span class="hljs-comment"># 檢查是否成功安裝套件</span><br></code></pre></td></tr></table></figure><h3 id="建立並複製公開儲存庫（repository；repo）至本地端"><a href="#建立並複製公開儲存庫（repository；repo）至本地端" class="headerlink" title="建立並複製公開儲存庫（repository；repo）至本地端"></a>建立並複製公開儲存庫（repository；repo）至本地端</h3><p>在欲放置儲存庫的專案目錄下，複製GitHub上的公開儲存庫至此。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/使用者名稱/使用者名稱.github.io<br></code></pre></td></tr></table></figure><h3 id="設定-Hexo"><a href="#設定-Hexo" class="headerlink" title="設定 Hexo"></a>設定 Hexo</h3><ol><li><p>從<a href="https://github.com/hexojs/hexo-starter">Hexo的GitHub上</a>下載所需設定文件：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init blog <span class="hljs-comment"># 在當前目錄建立blog資料夾（可自訂名稱）</span><br><span class="hljs-built_in">cp</span> blog/* &lt;本地儲存庫&gt; <span class="hljs-comment"># 範例：D:\xxx.github.io</span><br></code></pre></td></tr></table></figure></li><li><p>根據複製檔案中的「package.json」自動安裝需要的套件：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> &lt;本地儲存庫&gt;<br>npm install <span class="hljs-comment"># 依據當前目錄package.json</span><br></code></pre></td></tr></table></figure></li><li><p>安裝hexo-deployer-git，以一鍵部署：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save <span class="hljs-comment"># 無此套件後續deploy可能出錯</span><br></code></pre></td></tr></table></figure></li><li><p>修改設定檔_config.yml：</p><p> 主要設定網站內容的檔案。</p><p> 設定網站標題、作者、以及網站的URL等基本設定。</p><p> 加入以下程式碼，以自動部署到GitHub Pages：</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">&lt;儲存庫URL&gt;</span><br>  <span class="hljs-attr">branch:</span> [<span class="hljs-string">branch</span>]<br>  <span class="hljs-attr">message:</span> [<span class="hljs-string">message</span>]<br></code></pre></td></tr></table></figure></li></ol><h3 id="部署網頁"><a href="#部署網頁" class="headerlink" title="部署網頁"></a>部署網頁</h3><ul><li><p>將目前資料夾中所有靜態網頁清除：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br></code></pre></td></tr></table></figure></li><li><p>按照當前設定檔，產生對應的靜態網頁：（可省略）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo generate<br></code></pre></td></tr></table></figure></li><li><p>在本地端產生網頁，確認當前設計（預設127.0.0.1:4000）：（可省略）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo server<br></code></pre></td></tr></table></figure></li><li><p>將目前本地端靜態網頁自動部署至GitHub Pages：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo deploy<br></code></pre></td></tr></table></figure></li></ul><h3 id="Hexo-目錄架構"><a href="#Hexo-目錄架構" class="headerlink" title="Hexo 目錄架構"></a>Hexo 目錄架構</h3><ol><li><p>node_module：</p><p>這個專案所需要的套件（剛剛透過npm install所安裝）。</p></li><li><p>public：</p><p>存放網頁中的文章、圖片、標籤等資料。</p></li><li><p>scaffolds：</p><p>存放網站的內容模板。</p></li><li><p>themes：</p><p>存放網站的主題。</p></li></ol><hr><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ol><li><p><a href="https://hexo.io/zh-tw/docs/">文件 | Hexo</a></p></li><li><p><a href="https://minglun-wu.medium.com/%E5%BB%BA%E7%AB%8B%E4%B8%80%E5%80%8B%E5%B1%AC%E6%96%BC%E8%87%AA%E5%B7%B1%E7%9A%84-%E7%A8%8B%E5%BC%8F-%E9%83%A8%E8%90%BD%E6%A0%BC-4d295ed96236">建立一個屬於自己的(程式)部落格！. 透過 Github Page + Hexo來免費建立自己的Bl | by 吳明倫 MingLun Wu | Medium</a></p></li><li><p><a href="https://github.com/nodejs-tw/nodejs-wiki-book/blob/master/zh-tw/node_npm.rst">nodejs-tw&#x2F;nodejs-wiki-book&#x2F;zh-tw&#x2F;node_npm.rst:Node.js Taiwan 社群協作中文電子書</a></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>GitHub</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>Hexo</tag>
      
      <tag>Node.js</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
